syntax = "proto3";

package message;

// services
service MudComm {
    // Client sends and receives messages from the game server.
    rpc SendReceive(stream GameMessage) returns (stream GameMessage) {}
}

// types
message GameMessage {
    oneof inner {
        Ping ping = 50;
        Pong pong = 51;

        CreatePlayerRequest createPlayerRequest = 60;
        CreatePlayerResponse createPlayerResponse = 61;

        DataRequest dataRequest = 74;
        DataResponse dataResponse = 75;

        DeathNotification deathNotification = 90;

        DropRequest dropRequest = 100;
        DropResponse dropResponse = 101;
        DropNotification dropNotification = 102;

        EquipRequest equipRequest = 105;
        EquipResponse equipResponse = 106;

        ErrorRequest errorRequest = 110;
        ErrorResponse errorResponse = 111;

        ExitsRequest exitsRequest = 120;
        ExitsResponse exitsResponse = 121;

        GetRequest getRequest = 130;
        GetResponse getResponse = 131;
        GetNotification getNotification = 132;

        InventoryRequest inventoryRequest = 140;
        InventoryResponse inventoryResponse = 141;

        KillRequest killRequest = 146;
        KillResponse killResponse = 147;

        LoginRequest loginRequest = 150;
        LoginResponse loginResponse = 151;

        LogoutRequest logoutRequest = 160;
        LogoutResponse logoutResponse = 161;
        LogoutNotification logoutNotification = 162;

        LookRequest lookRequest = 170;
        LookResponse lookResponse = 171;
        LookNotification lookNotification = 172;

        MoveRequest moveRequest = 180;
        MoveResponse moveResponse = 181;
        EnterRoomNotification enterRoomNotification = 182;
        LeaveRoomNotification leaveRoomNotification = 183;

        RecallRequest recallRequest = 184;
        RecallResponse recallResponse = 185;

        RoomStatusRequest roomStatusRequest = 186;
        RoomStatusResponse roomStatusResponse = 187;

        SayRequest sayRequest = 190;
        SayResponse sayResponse = 191;
        SayNotification sayNotification = 192;

        ShowEquipmentRequest showEquipmentRequest = 196;
        ShowEquipmentResponse showEquipmentResponse = 197;

        TellRequest tellRequest = 200;
        TellResponse tellResponse = 201;
        TellNotification tellNotification = 202;

        TellAllRequest tellAllRequest = 210;
        TellAllResponse tellAllResponse = 211;
        TellAllNotification tellAllNotification = 212;

        ViolenceNotification violenceNotification = 214;

        WearRequest wearRequest = 216;
        WearResponse wearResponse = 217;

        WhoRequest whoRequest = 220;
        WhoResponse whoResponse = 221;
    }
}

message CreatePlayerRequest {
    string playerName = 1;
    string password = 2;
    int32 race = 3; // TODO 0=human, 1=? ...
    int32 class = 4; // TODO fighter, mage ...
    // TODO gender, other fields...
}

message CreatePlayerResponse {
    bool success = 1;
    string resultCode = 2;
    string playerName = 3;
}

message DataRequest {
    string dataType = 1;
}

message DataResponse {
    bool success = 1;
    string resultCode = 2;
    string data = 3;
}

message DeathNotification {
    string target = 1;
    bool isPlayer = 2;
}

message DropRequest {
    string target = 1;
}

message DropResponse {
    bool success = 1;
    string resultCode = 2;
}

message DropNotification {
    bool success = 1;
    string resultCode = 2;
    string playerName = 3;
    string target = 4;
}

message EquipRequest {
    string target = 1;
    int32 slotLocation = 2;
}

message EquipResponse {
    bool success = 1;
    string resultCode = 2;
}

message ErrorRequest {
    string error = 1;
}

message ErrorResponse {
    bool success = 1;
    string resultCode = 2;
    string error = 3;
}

message ExitsRequest {
}

message ExitsResponse {
    bool success = 1;
    string resultCode = 2;
    repeated ExitInfo exitInfo = 3;
}

message ExitInfo {
    int32 direction = 1;
    string roomName = 2;
}

message GetRequest {
    string target = 1;
    int32 findMode = 2; // FIND_INDIV = 0; FIND_ALL = 1; FIND_ALLDOT = 2;
    string index = 3; // which one to find? (could be "", "all", "1"...)
}

message GetResponse {
    bool success = 1;
    string resultCode = 2;
}

message GetNotification {
    bool success = 1;
    string resultCode = 2;
    string playerName = 3;
    string target = 4;
}

message InventoryRequest {
}

message InventoryResponse {
    bool success = 1;
    string resultCode = 2;
    repeated InventoryItem inventoryItems = 3;

    message InventoryItem {
        string id = 1;
        string shortDescription = 2;
        repeated int32 objectCategories = 3;
    }
}

message KillRequest {
    string target = 1;
}

message KillResponse {
    bool success = 1;
    string resultCode = 2;
}

message LoginRequest {
    string playerName = 1;
    string password = 2;
}

message LoginResponse {
    bool success = 1;
    string resultCode = 2;
    string playerName = 3;
}

message LogoutRequest {
    string cause = 1;
}

message LogoutResponse {
    bool success = 1;
    string resultCode = 2;
}

message LogoutNotification {
    bool success = 1;
    string resultCode = 2;
    string playerName = 3;
}

message LookRequest {
    repeated string valueList = 1;
}

message LookResponse {
    bool success = 1;
    string resultCode = 2;
    RoomDescription roomDescription = 3;
}

message LookNotification {
    bool success = 1;
    string resultCode = 2;
    RoomDescription roomDescription = 3;
}

message RoomDescription {
    string name = 1;
    string description = 2;
    string exits = 3;
    repeated string players = 4;
    repeated string objects = 5;
    repeated string  mobs = 6;
}

message MoveRequest {
    int32 direction = 1;
}

message MoveResponse {
    bool success = 1;
    string resultCode = 2;
    RoomDescription roomDescription = 3;
}

message EnterRoomNotification {
    bool success = 1;
    string resultCode = 2;
    string name = 3;
}

message LeaveRoomNotification {
    bool success = 1;
    string resultCode = 2;
    string name = 3;
    int32 direction = 4;
}

message Ping {
    string target = 1;
}

message Pong {
    bool success = 1;
    string resultCode = 2;
    string target = 3;
}

message RecallRequest {
}

message RecallResponse {
    bool success = 1;
    string resultCode = 2;
    RoomDescription roomDescription = 3;
}

message RoomStatusRequest {
    string zoneId = 1;
    string roomId = 2;
}

message RoomStatusResponse {
    bool success = 1;
    string resultCode = 2;
    repeated PlayerInfo playerInfo = 3;
    repeated InventoryInfo inventoryInfo = 4;
    repeated MobInfo mobInfo = 5;
    string id = 6;
    string name = 7;
    string description = 8;
    string zoneName = 9;
    string zoneId = 10;
    repeated DirectionInfo directions = 11;
    repeated string flags = 12;

    message PlayerInfo {
        string name = 1;
        int64 currentHealth = 2;
        int64 maxHealth = 3;
    }

    message InventoryInfo {
        string id = 1;
        string definitionId = 2;
        repeated string aliases = 3;
        repeated string categories = 4;
        string name = 5;
        string shortDescription = 6;
        string descriptionOnGround = 7;
        string zoneId = 8;
        repeated string behaviors = 9;
    }

    message MobInfo {
        string id = 1;
        string definitionId = 2;
        repeated string aliases = 3;
        string name = 4;
        string shortDescription = 5;
        string descriptionInRoom = 6;
        string zoneId = 7;
        int64 currentHealth = 8;
        int64 maxHealth = 9;
        repeated string flags = 10;
    }

    message DirectionInfo {
        string dir = 1;
        string roomId = 2;
        string zoneId = 3;
        repeated string flags = 4;
    }
}

message SayRequest {
    string value = 1;
}

message SayResponse {
    bool success = 1;
    string resultCode = 2;
    string value = 3;
}

message SayNotification {
    bool success = 1;
    string resultCode = 2;
    string sender = 3;
    string value = 4;
}

message ShowEquipmentRequest {
}

message ShowEquipmentResponse {
    bool success = 1;
    string resultCode = 2;
    repeated EquipmentInfo equipmentInfo = 3;

    message EquipmentInfo {
        int32 slotLocation = 1;
        string id = 2;
        string shortDescription = 3;
    }
}

message TellRequest {
    string receiverPlayerName = 1;
    string value = 2;
}

message TellResponse {
    bool success = 1;
    string resultCode = 2;
}

message TellNotification {
    bool success = 1;
    string resultCode = 2;
    string sender = 3;
    string value = 4;
}

message TellAllRequest {
    string value = 1;
}

message TellAllResponse {
    bool success = 1;
    string resultCode = 2;
}

message TellAllNotification {
    bool success = 1;
    string resultCode = 2;
    string sender = 3;
    string value = 4;
}

message ViolenceNotification {
    string fighter = 1;
    string fightee = 2;
    bool successfulHit = 3;
    int32 damage = 4;
}

message WhoRequest {
}

message WhoResponse {
    bool success = 1;
    string resultCode = 2;
    repeated PlayerInfo playerInfo = 3;

    message PlayerInfo {
        string playerName = 1;
        string zoneName = 2;
        string roomName = 3;
    }
}

message WearRequest {
    string target = 1;
    string location = 2;
}

message WearResponse {
    bool success = 1;
    string resultCode = 2;
}
